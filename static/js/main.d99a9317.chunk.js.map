{"version":3,"sources":["Main/index.js","Movies/index.js","Detailed/index.js","Search/index.js","App.js","serviceWorker.js","index.js"],"names":["Main","state","bgImage","search","updateInputValue","evt","setState","target","value","this","fetchbgMovie","fetch","response","json","data","rand","Math","random","results","parseInt","backdrop_path","className","src","alt","InputGroup","FormControl","onChange","placeholder","aria-describedby","Append","to","Button","disabled","length","variant","breakpoints","breakpoint","settings","slidesToShow","slidesToScroll","showSides","sidesOpacity","sideSize","scrollOnDevice","React","Component","Movies","movies","page","p","prevState","fetchMovies","url","props","match","params","genre","result","filter","x","original_language","href","onClick","increasePage","bind","map","movie","key","id","Card","console","log","Img","poster_path","Body","Title","title","vote_average","Detailed","fetchMovie","style","backgroundSize","backgroundAttachment","backgroundImage","tagline","overview","Search","fetchSearch","query","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d99a9317.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\n\r\nimport { InputGroup, FormControl, Button } from \"react-bootstrap\";\r\nimport InfiniteCarousel from 'react-leaf-carousel';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Main extends React.Component {\r\n  state = {\r\n    bgImage: '',\r\n    search: '',\r\n  }\r\n\r\n  updateInputValue = evt => {\r\n    this.setState({\r\n      search: evt.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchbgMovie();\r\n  }\r\n\r\n  async fetchbgMovie() {\r\n    const url = 'https://api.themoviedb.org/3/trending/movie/day?api_key=1752c8ea8ce111cf37e45818b0779d5f';\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    /* Numero random de 1 a 19 para pegar imagem aleatória */\r\n    const min = 1;\r\n    const max = 19;\r\n    const rand = min + Math.random() * (max - min);\r\n    this.setState({ bgImage: data.results[parseInt(rand)].backdrop_path });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"search\">\r\n          <img src={'https://image.tmdb.org/t/p/w1280/' + this.state.bgImage} alt=\"\" />\r\n          <div className=\"top-left\">\r\n            <h4>VitaoFilmesHD</h4>\r\n          </div>\r\n          <div className=\"top-right\">\r\n            <InputGroup className=\"iptMovie\">\r\n              <FormControl\r\n                value={this.state.search}\r\n                onChange={this.updateInputValue}\r\n                placeholder=\"Procure por filmes ou séries\"\r\n                aria-describedby=\"basic-addon2\"\r\n              />\r\n              <InputGroup.Append>\r\n                <Link to={'/search/'+this.state.search}>\r\n                  <Button disabled={this.state.search.length < 4 ? \"disabled\" : \"\"} className=\"btnSearch\" variant=\"outline-secondary\">Pesquisar</Button>\r\n                </Link>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"genres\">\r\n          <InfiniteCarousel\r\n            breakpoints={[\r\n              {\r\n                breakpoint: 1296,\r\n                settings: {\r\n                  slidesToShow: 5,\r\n                  slidesToScroll: 4,\r\n                },\r\n              },\r\n              {\r\n                breakpoint: 900,\r\n                settings: {\r\n                  slidesToShow: 4,\r\n                  slidesToScroll: 4,\r\n                },\r\n              },\r\n              {\r\n                breakpoint: 768,\r\n                settings: {\r\n                  slidesToShow: 3,\r\n                  slidesToScroll: 3,\r\n                },\r\n              },\r\n              {\r\n                breakpoint: 575,\r\n                settings: {\r\n                  slidesToShow: 2,\r\n                  slidesToScroll: 2,\r\n                },\r\n              },\r\n              {\r\n                breakpoint: 375,\r\n                settings: {\r\n                  slidesToShow: 1,\r\n                  slidesToScroll: 1,\r\n                },\r\n              },\r\n            ]}\r\n            showSides={true}\r\n            sidesOpacity={.4}\r\n            sideSize={.1}\r\n            slidesToScroll={4}\r\n            slidesToShow={5}\r\n            scrollOnDevice={true}\r\n          >\r\n            <div>\r\n              <h6>Ação</h6>\r\n              <Link to={\"/movies/28\"}>\r\n                <img\r\n                  alt=''\r\n                  src='https://image.tmdb.org/t/p/w1280/dJnXQL6Aa4s26eaORTvy0zRskfh.jpg'\r\n                />\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <h6>Aventura</h6>\r\n              <Link to={\"/movies/12\"}>\r\n                <img\r\n                  alt=''\r\n                  src='https://image.tmdb.org/t/p/w1280//devZdyPRXMiN8HHiX7Y8s0LLEee.jpg'\r\n                />\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <h6>Animação</h6>\r\n              <Link to={\"/movies/16\"}>\r\n                <img\r\n                  alt=''\r\n                  src='https://image.tmdb.org/t/p/w1280//pZC8Rc6t8vEUow28GLJaSYq4Blr.jpg'\r\n                />\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <h6>Comédia</h6>\r\n              <Link to={\"/movies/35\"}>\r\n                <img\r\n                  alt=''\r\n                  src='https://image.tmdb.org/t/p/w1280//foEOVg4HQl2VzKzTh27CAHmXyg.jpg'\r\n                />\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <h6>Crime</h6>\r\n              <Link to={\"/movies/80\"}>\r\n                <img\r\n                  alt=''\r\n                  src='https://image.tmdb.org/t/p/w1280//ylt62ORXZxcRePzZuI0xwJ6ERup.jpg'\r\n                />\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <h6>Documentário</h6>\r\n              <Link to={\"/movies/99\"}>\r\n                <img\r\n                  alt=''\r\n                  src='https://image.tmdb.org/t/p/w1280//cX3fl80NMXILgmsy0blU9ir6sy1.jpg'\r\n                />\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <h6>Drama</h6>\r\n              <Link to={\"/movies/18\"}>\r\n                <img\r\n                  alt=''\r\n                  src='https://image.tmdb.org/t/p/w1280//2YMTXZP7wExlJS5dBdTWoHO5wm3.jpg'\r\n                />\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <h6>Terror</h6>\r\n              <Link to={\"/movies/27\"}>\r\n                <img\r\n                  alt='Terror'\r\n                  src='https://image.tmdb.org/t/p/w1280//hufyXxsAqgWvWZp2lq2wZPsS4sf.jpg'\r\n                />\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <h6>Música</h6>\r\n              <Link to={\"/movies/10402\"}>\r\n                <img\r\n                  alt=''\r\n                  src='https://image.tmdb.org/t/p/w1280//1rjaRIAqFPQNnMtqSMLtg0VEABi.jpg'\r\n                />\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <h6>Romance</h6>\r\n              <Link to={\"/movies/10749\"}>\r\n                <img\r\n                  alt=''\r\n                  src='https://image.tmdb.org/t/p/w1280//5o8iX7Vi2fbDjqCXeGU25LKGtti.jpg'\r\n                />\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <h6>Ficção científica</h6>\r\n              <Link to={\"/movies/878\"}>\r\n                <img\r\n                  alt=''\r\n                  src='https://image.tmdb.org/t/p/w1280//rkHe0BfOo1f5N2q6rxgdYac7Zf6.jpg'\r\n                />\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <h6>Guerra</h6>\r\n              <Link to={\"/movies/10752\"}>\r\n                <img\r\n                  alt=''\r\n                  src='https://image.tmdb.org/t/p/w1280//7iVdjPGTWQ3PcEE6faZSoIAOPvX.jpg'\r\n                />\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <h6>Faroeste</h6>\r\n              <Link to={\"/movies/37\"}>\r\n                <img\r\n                  alt=''\r\n                  src='https://image.tmdb.org/t/p/w1280//aKlksK9ZfL4OCI66H9i4dB7zZhc.jpg'\r\n                />\r\n              </Link>\r\n            </div>\r\n          </InfiniteCarousel>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport './index.css';\r\n\r\nimport { MdSkipNext } from 'react-icons/md';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Movies extends React.Component {\r\n  state = {\r\n    movies: [],\r\n    page: 1,\r\n  }\r\n\r\n  increasePage(p) {\r\n    this.setState(prevState => {\r\n      return {page: prevState.page + 1}\r\n    });\r\n    this.fetchMovies();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchMovies();\r\n  }\r\n\r\n  async fetchMovies() {\r\n    const url = 'https://api.themoviedb.org/3/movie/popular?api_key=1752c8ea8ce111cf37e45818b0779d5f&language=pt-BR&page='+this.state.page+'&whithout_genres=animation&with_genres=' + this.props.match.params.genre;\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    /* Tirar os filmes japoneses */\r\n    const result = data.results.filter(x =>\r\n      x.original_language !== 'ja' &&\r\n      x.original_language !== 'ko'\r\n    );\r\n\r\n    this.setState({ movies: result })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"top-left\">\r\n          <h4><a href='/'>VitaoFilmesHD</a></h4>\r\n        </div>\r\n        <div className=\"top-right\">\r\n          <Button variant=\"link\" value='Inc' onClick={this.increasePage.bind(this)}> <MdSkipNext/> </Button>\r\n        </div>\r\n        <div className=\"movies\">\r\n          {this.state.movies.map(movie => (\r\n            <div key={movie.id} className=\"movie\">\r\n              <Link to={\"/movie/\" + movie.id}>\r\n                <Card onClick={() => console.log(movie.id)}>\r\n                  <Card.Img className=\"imgPoster\" src={'https://image.tmdb.org/t/p/w1280/' + movie.poster_path} />\r\n                  <Card.Body className=\"movieDescription\">\r\n                    <Card.Title className=\"movieTitle\">{movie.title}</Card.Title>\r\n                    <Card.Title className=\"movieRating\">{movie.vote_average} </Card.Title>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Movies;\r\n","import React from 'react';\r\nimport './index.css';\r\n\r\nclass Detailed extends React.Component {\r\n  state = {\r\n    bgImage: '',\r\n    movie: [],\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchMovie();\r\n  }\r\n\r\n  async fetchMovie() {\r\n    const url = 'https://api.themoviedb.org/3/movie/' + this.props.match.params.id + '?api_key=1752c8ea8ce111cf37e45818b0779d5f&language=pt-BR';\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    this.setState({ movie: data, bgImage: data.backdrop_path });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Detailed\">\r\n        <div className=\"movieDetail\" style={{backgroundSize: 'cover', filter: 'brightness(80%)', backgroundAttachment: 'fixed', backgroundImage: `url(https://image.tmdb.org/t/p/w1280/${this.state.bgImage})` }}>\r\n          <div className=\"top-left\">\r\n            <h4><a href='/'>VitaoFilmesHD</a></h4>\r\n          </div>\r\n          <div className=\"detailedMovie\">\r\n            <h2>{this.state.movie.title}</h2>\r\n            <h4>{this.state.movie.tagline}</h4>\r\n            <p>{this.state.movie.overview}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Detailed;\r\n","import React from 'react';\r\nimport './index.css';\r\n\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Search extends React.Component {\r\n  state = {\r\n    bgImage: '',\r\n    movies: [],\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchbgMovie();\r\n    this.fetchSearch();\r\n  }\r\n\r\n  async fetchbgMovie() {\r\n    const url = 'https://api.themoviedb.org/3/trending/movie/day?api_key=1752c8ea8ce111cf37e45818b0779d5f';\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    /* Numero random de 1 a 19 para pegar imagem aleatória */\r\n    const min = 1;\r\n    const max = 19;\r\n    const rand = min + Math.random() * (max - min);\r\n    this.setState({ bgImage: data.results[parseInt(rand)].backdrop_path });\r\n  }\r\n\r\n  async fetchSearch() {\r\n    const url = 'https://api.themoviedb.org/3/search/movie?api_key=1752c8ea8ce111cf37e45818b0779d5f&sort_by=popularity.desc&language=pt-BR&query=' + this.props.match.params.query;\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    /* Tirar os filmes japoneses */\r\n    const result = data.results.filter(x =>\r\n      x.original_language !== 'ja' &&\r\n      x.original_language !== 'ko'\r\n    );\r\n\r\n    this.setState({ movies: result })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.movies.length > 0) {\r\n      return (\r\n        <div className=\"App\">\r\n          <div className=\"top-left\">\r\n            <h4><a href='/'>VitaoFilmesHD</a></h4>\r\n          </div>\r\n          <div className=\"movies\">\r\n            {this.state.movies.map(movie => (\r\n              <div key={movie.id} className=\"movie\">\r\n                <Link to={\"/movie/\" + movie.id}>\r\n                  <Card onClick={() => console.log(movie.id)}>\r\n                    <Card.Img className=\"imgPoster\" src={'https://image.tmdb.org/t/p/w1280/' + movie.poster_path} />\r\n                    <Card.Body className=\"movieDescription\">\r\n                      <Card.Title className=\"movieTitle\">{movie.title}</Card.Title>\r\n                      <Card.Title className=\"movieRating\">{movie.vote_average} </Card.Title>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Link>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        /* Nao foi possivel */\r\n        <div className=\"App\">\r\n          <div style={{ backgroundSize: 'cover', filter: 'brightness(80%)', backgroundAttachment: 'fixed', backgroundImage: `url(https://image.tmdb.org/t/p/w1280/${this.state.bgImage})` }} className=\"movieDetail\">\r\n            <div className=\"top-left\">\r\n              <h4><a href='/'>VitaoFilmesHD</a> - Nenhum filme encontrado</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\nimport './App.css';\nimport Main from './Main';\nimport Movies from './Movies';\nimport Detailed from './Detailed';\nimport Search from './Search';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nfunction App(){\n    return (\n      <div className=\"App\">\n        <Router>\n          <Route exact path=\"/\" component={Main} />\n          <Route path=\"/movies/:genre\" component={Movies} />\n          <Route path=\"/movie/:id\" component={Detailed} />\n          <Route path=\"/search/:query\" component={Search} />\n        </Router>\n      </div>\n    );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}